(()=>{"use strict";var e={"./assets/ts/game/element.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0});t.default=class{constructor(e,t,n,s,a,i,l,r){this.x=e,this.y=t,this.width=n,this.height=s,this.id=a,this.type=i,this.sprite=l,this.index=r,this.drawWithHalfOpacity=!1}tick(){}render(e){this.drawWithHalfOpacity?(e.globalAlpha=.5,e.drawImage(this.sprite,this.x,this.y,this.width,this.height),e.globalAlpha=1):e.drawImage(this.sprite,this.x,this.y,this.width,this.height)}}},"./assets/ts/game/game.ts":function(e,t,n){var s=this&&this.__awaiter||function(e,t,n,s){return new(n||(n=Promise))((function(a,i){function l(e){try{o(s.next(e))}catch(e){i(e)}}function r(e){try{o(s.throw(e))}catch(e){i(e)}}function o(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(l,r)}o((s=s.apply(e,t||[])).next())}))},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const i=a(n("./assets/ts/graphics/graphics.ts")),l=n("./assets/ts/misc/constants.ts"),r=a(n("./assets/ts/misc/html.ts")),o=a(n("./assets/ts/game/element.ts"));class d{constructor(e=0,t=0,n=null){this.mapWidth=e,this.mapHeight=t,window.localStorage.setItem("mapWidth",String(this.mapWidth)),window.localStorage.setItem("mapHeight",String(this.mapHeight)),this.elements=new Array,this.graphics=new i.default,this.savedData=n,this.isRunning=!1,this.draggedCanvasElement=null,this.mouseDown=null,this.appDiv=document.getElementById("app"),this.divCanvas=document.getElementById("divCanvas"),this.canvas=document.getElementById("canvas"),this.context2D=this.canvas.getContext("2d"),this.btnSaveMap=document.getElementById("btnSaveMap"),this.scale=this.determineScale(),this.html=new r.default(this.scale)}main(){return s(this,void 0,void 0,(function*(){yield this.loadAssets(),this.html.createElements(),this.savedData&&this.loadSavedData(this.savedData),this.initializeEvents(),this.adjustCanvas(),this.drawBackground(),this.run()}))}tick(){for(let e=0;e<this.elements.length;e++)this.elements[e].tick()}render(){this.drawBackground();for(let e=0;e<this.elements.length;e++)this.elements[e].render(this.context2D)}run(){let e=this,t=0,n=0;this.isRunning=!0,window.requestAnimationFrame((function s(a){e.tick(),e.render(),"block"===e.html.spanFPS.style.display&&(t++,a-n>1e3&&(e.html.spanFPS.innerText=`${t}fps`,t=0,n=a)),e.isRunning&&window.requestAnimationFrame(s)}))}adjustCanvas(){this.divCanvas.style.width=l.GAME_WIDTH*this.scale+"px",this.divCanvas.style.height=l.GAME_HEIGHT*this.scale+"px",this.canvas.width=this.mapWidth*this.scale,this.canvas.height=this.mapHeight*this.scale,this.context2D.scale(this.scale,this.scale),this.context2D.imageSmoothingEnabled=!1}drawBackground(){this.context2D.fillStyle="black",this.context2D.fillRect(0,0,this.mapWidth,this.mapHeight),this.context2D.drawImage(i.default.grid,0,0,this.mapWidth,this.mapHeight)}determineScale(){const e=this.appDiv.offsetWidth,t=this.appDiv.offsetHeight;let n=e/l.GAME_WIDTH;return n>=1&&(n=Math.floor(n),(l.GAME_WIDTH*n>e||l.GAME_HEIGHT*n>t)&&(n-=1)),n<1&&n>=.75?n=.75:n<.75&&n>=.5?n=.5:n<.5&&(n=.25),n}initializeEvents(){window.addEventListener("resize",(()=>{this.scale=this.determineScale(),this.adjustCanvas()})),this.canvas.addEventListener("dragover",(e=>(e.preventDefault(),!1))),this.canvas.addEventListener("drop",(e=>{this.dropEventHandler(e)})),this.canvas.addEventListener("mousedown",(e=>{this.mouseDownEventHandler(e)})),this.canvas.addEventListener("mousemove",(e=>{this.mouseMoveEventHandler(e)})),this.canvas.addEventListener("mouseup",(e=>{this.mouseUpEventHandler(e)})),this.canvas.addEventListener("contextmenu",(e=>{this.contextMenuEventHandler(e)})),this.btnSaveMap.addEventListener("click",(()=>{this.saveMap()})),window.setInterval((()=>{window.localStorage.setItem("elements",JSON.stringify(this.elements))}),3e4)}loadAssets(){return s(this,void 0,void 0,(function*(){yield this.graphics.loadGraphics(this.scale)}))}dropEventHandler(e){const t=Number(d.dragged.dataset.index),n=String(d.dragged.dataset.array),s=d.dragged.parentElement?d.dragged.parentElement.scrollTop:0,a=Math.round((e.offsetX-d.dragEvent.clientX+d.dragged.offsetLeft)/this.scale),l=Math.round((e.offsetY-d.dragEvent.clientY+d.dragged.offsetTop-s)/this.scale);switch(n){case"wall":const e=i.default.wall[t].name,s=i.default.wall[t].sprite;this.elements.push(new o.default(a,l,s.width,s.height,e,n,s,t));break;case"wallAnim":const r=i.default.wallAnim[t].name,d=i.default.wallAnim[t].sprite;this.elements.push(new o.default(a,l,d.width,d.height,r,n,d,t));break;case"floor":const c=i.default.floor[t].name,h=i.default.floor[t].sprite;this.elements.push(new o.default(a,l,h.width,h.height,c,n,h,t));break;case"interactable":const p=i.default.interactable[t].name,m=i.default.interactable[t].sprite;this.elements.push(new o.default(a,l,m.width,m.height,p,n,m,t));break;case"interactableAnim":const u=i.default.interactableAnim[t].name,f=i.default.interactableAnim[t].sprite;this.elements.push(new o.default(a,l,f.width,f.height,u,n,f,t));break;case"doors":const w=i.default.doors[t].name,g=i.default.doors[t].sprite;this.elements.push(new o.default(a,l,g.width,g.height,w,n,g,t));break;case"weapon":const _=i.default.weapon[t].name,E=i.default.weapon[t].sprite;this.elements.push(new o.default(a,l,E.width,E.height,_,n,E,t));break;case"potion":const y=i.default.potion[t].name,v=i.default.potion[t].sprite;this.elements.push(new o.default(a,l,v.width,v.height,y,n,v,t));break;case"enemy":const b=i.default.enemy[t].name,I=i.default.enemy[t].sprite;this.elements.push(new o.default(a,l,I.width,I.height,b,n,I,t));break;case"player":const S=i.default.player.name,H=i.default.player.sprite;this.elements.push(new o.default(a,l,H.width,H.height,S,n,H,t))}}mouseDownEventHandler(e){const t=e.offsetX/this.scale,n=e.offsetY/this.scale;for(let e=this.elements.length-1;e>=0;e--){const s=this.elements[e],a=s.x,i=s.y,l=s.x+s.width,r=s.y+s.height;if(t>=a&&t<=l&&n>=i&&n<=r){this.draggedCanvasElement=s,this.mouseDown={diffX:a-t,diffY:i-n},s.drawWithHalfOpacity=!0;break}}}mouseMoveEventHandler(e){if(this.mouseDown){const t=e.offsetX/this.scale+this.mouseDown.diffX,n=e.offsetY/this.scale+this.mouseDown.diffY;this.draggedCanvasElement&&(this.draggedCanvasElement.x=t,this.draggedCanvasElement.y=n)}}mouseUpEventHandler(e){if(this.mouseDown){const t=e.offsetX/this.scale+this.mouseDown.diffX,n=e.offsetY/this.scale+this.mouseDown.diffY;this.draggedCanvasElement&&(this.draggedCanvasElement.x=t,this.draggedCanvasElement.y=n,this.draggedCanvasElement.drawWithHalfOpacity=!1,this.mouseDown=null,this.draggedCanvasElement=null)}}contextMenuEventHandler(e){e.preventDefault();const t=e.offsetX/this.scale,n=e.offsetY/this.scale;for(let e=this.elements.length-1;e>=0;e--){const s=this.elements[e],a=s.x+s.width,i=s.y+s.height;if(t>=s.x&&t<=a&&n>=s.y&&n<=i){this.elements.splice(e,1);break}}}loadSavedData(e){let t=JSON.parse(e);for(let e in t)switch(String(t[e].type)){case"wall":this.elements.push(new o.default(parseInt(t[e].x),parseInt(t[e].y),parseInt(t[e].width),parseInt(t[e].height),String(t[e].id),String(t[e].type),i.default.wall[parseInt(t[e].index)].sprite,parseInt(t[e].index)));break;case"wallAnim":this.elements.push(new o.default(parseInt(t[e].x),parseInt(t[e].y),parseInt(t[e].width),parseInt(t[e].height),String(t[e].id),String(t[e].type),i.default.wallAnim[parseInt(t[e].index)].sprite,parseInt(t[e].index)));break;case"floor":this.elements.push(new o.default(parseInt(t[e].x),parseInt(t[e].y),parseInt(t[e].width),parseInt(t[e].height),String(t[e].id),String(t[e].type),i.default.floor[parseInt(t[e].index)].sprite,parseInt(t[e].index)));break;case"interactable":this.elements.push(new o.default(parseInt(t[e].x),parseInt(t[e].y),parseInt(t[e].width),parseInt(t[e].height),String(t[e].id),String(t[e].type),i.default.interactable[parseInt(t[e].index)].sprite,parseInt(t[e].index)));break;case"interactableAnim":this.elements.push(new o.default(parseInt(t[e].x),parseInt(t[e].y),parseInt(t[e].width),parseInt(t[e].height),String(t[e].id),String(t[e].type),i.default.interactableAnim[parseInt(t[e].index)].sprite,parseInt(t[e].index)));break;case"doors":this.elements.push(new o.default(parseInt(t[e].x),parseInt(t[e].y),parseInt(t[e].width),parseInt(t[e].height),String(t[e].id),String(t[e].type),i.default.doors[parseInt(t[e].index)].sprite,parseInt(t[e].index)));break;case"weapon":this.elements.push(new o.default(parseInt(t[e].x),parseInt(t[e].y),parseInt(t[e].width),parseInt(t[e].height),String(t[e].id),String(t[e].type),i.default.weapon[parseInt(t[e].index)].sprite,parseInt(t[e].index)));break;case"potion":this.elements.push(new o.default(parseInt(t[e].x),parseInt(t[e].y),parseInt(t[e].width),parseInt(t[e].height),String(t[e].id),String(t[e].type),i.default.potion[parseInt(t[e].index)].sprite,parseInt(t[e].index)));break;case"enemy":this.elements.push(new o.default(parseInt(t[e].x),parseInt(t[e].y),parseInt(t[e].width),parseInt(t[e].height),String(t[e].id),String(t[e].type),i.default.enemy[parseInt(t[e].index)].sprite,parseInt(t[e].index)));break;case"player":this.elements.push(new o.default(parseInt(t[e].x),parseInt(t[e].y),parseInt(t[e].width),parseInt(t[e].height),String(t[e].id),String(t[e].type),i.default.player.sprite,parseInt(t[e].index)))}}saveMap(){window.localStorage.clear();const e={width:this.mapWidth,height:this.mapHeight,elements:this.elements},t=new Blob([JSON.stringify(e)],{type:"application/json"}),n=URL.createObjectURL(t),s=document.createElement("a");s.setAttribute("href",n),s.setAttribute("download","map.json"),s.click()}}t.default=d},"./assets/ts/graphics/graphics.ts":function(e,t,n){var s=this&&this.__awaiter||function(e,t,n,s){return new(n||(n=Promise))((function(a,i){function l(e){try{o(s.next(e))}catch(e){i(e)}}function r(e){try{o(s.throw(e))}catch(e){i(e)}}function o(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(l,r)}o((s=s.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0});const a=n("./assets/ts/misc/constants.ts"),i=n("./assets/ts/graphics/spritesheet.cheatsheet.ts");class l{loadGraphics(e){return s(this,void 0,void 0,(function*(){const t=yield this.setSpritesheet();l.grid=yield this.createGridImage(e);let n=yield this.cutSprite(t,i.CHEATSHEET.player[0],i.CHEATSHEET.player[1],i.CHEATSHEET.player[2],i.CHEATSHEET.player[3]);l.player={name:"player",sprite:n};for(const e in i.CHEATSHEET.wall){const n=i.CHEATSHEET.wall[e],s={name:e,sprite:yield this.cutSprite(t,n[0],n[1],n[2],n[3])};l.wall.push(s)}for(const e in i.CHEATSHEET.wall_anim){const n=i.CHEATSHEET.wall_anim[e],s={name:e,sprite:yield this.cutSprite(t,n[0],n[1],n[2],n[3])};l.wallAnim.push(s)}for(const e in i.CHEATSHEET.floor){const n=i.CHEATSHEET.floor[e],s={name:e,sprite:yield this.cutSprite(t,n[0],n[1],n[2],n[3])};l.floor.push(s)}for(const e in i.CHEATSHEET.interactable){const n=i.CHEATSHEET.interactable[e],s={name:e,sprite:yield this.cutSprite(t,n[0],n[1],n[2],n[3])};l.interactable.push(s)}for(const e in i.CHEATSHEET.interactable_anim){const n=i.CHEATSHEET.interactable_anim[e],s={name:e,sprite:yield this.cutSprite(t,n[0],n[1],n[2],n[3])};l.interactableAnim.push(s)}for(const e in i.CHEATSHEET.doors){const n=i.CHEATSHEET.doors[e],s={name:e,sprite:yield this.cutSprite(t,n[0],n[1],n[2],n[3])};l.doors.push(s)}for(const e in i.CHEATSHEET.weapon){const n=i.CHEATSHEET.weapon[e],s={name:e,sprite:yield this.cutSprite(t,n[0],n[1],n[2],n[3])};l.weapon.push(s)}for(const e in i.CHEATSHEET.potion){const n=i.CHEATSHEET.potion[e],s={name:e,sprite:yield this.cutSprite(t,n[0],n[1],n[2],n[3])};l.potion.push(s)}for(const e in i.CHEATSHEET.enemy){const n=i.CHEATSHEET.enemy[e],s={name:e,sprite:yield this.cutSprite(t,n[0],n[1],n[2],n[3])};l.enemy.push(s)}}))}setSpritesheet(){const e=document.createElement("img");return new Promise(((t,n)=>{e.onload=()=>t(e),e.onerror=n,e.src=a.SPRITESHEET}))}createGridImage(e){const t=document.createElement("img"),n=a.TILE_SIZE*e,s=new Blob([`\n            <svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg">\n                <defs>\n                    <pattern id="grid" width="${n}" height="${n}" patternUnits="userSpaceOnUse">\n                        <path d="M ${n} 0 L 0 0 0 ${n}" fill="none" stroke="rgba(187, 128, 130, 0.4)" stroke-width="${e}" />\n                    </pattern>\n                </defs>\n                <rect width="100%" height="100%" fill="url(#grid)"/>\n            </svg>\n        `],{type:"image/svg+xml;charset=utf-8"}),i=window.URL.createObjectURL(s);return new Promise(((e,n)=>{t.onload=()=>e(t),t.onerror=n,t.src=i}))}cutSprite(e,t,n,s,a){return createImageBitmap(e,t,n,s,a)}}t.default=l,l.wall=new Array,l.wallAnim=new Array,l.floor=new Array,l.interactable=new Array,l.interactableAnim=new Array,l.doors=new Array,l.weapon=new Array,l.potion=new Array,l.enemy=new Array},"./assets/ts/graphics/spritesheet.cheatsheet.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CHEATSHEET=void 0,t.CHEATSHEET={wall:{wall_top_left:[16,0,16,16],wall_top_mid:[16,0,16,16],wall_top_right:[16,0,16,16],wall_left:[16,16,16,16],wall_mid:[32,16,16,16],wall_right:[48,16,16,16],wall_fountain_top:[64,0,16,16],wall_hole_1:[48,32,16,16],wall_hole_2:[48,48,16,16],wall_banner_red:[16,32,16,16],wall_banner_blue:[32,32,16,16],wall_banner_green:[16,48,16,16],wall_banner_yellow:[32,48,16,16],wall_column_top:[96,80,16,16],wall_column_mid:[96,96,16,16],wall_column_base:[96,112,16,16],wall_goo:[64,80,16,16],wall_side_top_left:[0,112,16,16],wall_side_top_right:[16,112,16,16],wall_side_mid_left:[0,128,16,16],wall_side_mid_right:[16,128,16,16],wall_side_front_left:[0,144,16,16],wall_side_front_right:[16,144,16,16],wall_corner_top_left:[32,112,16,16],wall_corner_top_right:[48,112,16,16],wall_corner_left:[32,128,16,16],wall_corner_right:[48,128,16,16],wall_corner_bottom_left:[32,144,16,16],wall_corner_bottom_right:[48,144,16,16],wall_corner_front_left:[32,160,16,16],wall_corner_front_right:[48,160,16,16],wall_inner_corner_l_top_left:[80,128,16,16],wall_inner_corner_l_top_right:[64,128,16,16],wall_inner_corner_mid_left:[80,144,16,16],wall_inner_corner_mid_right:[64,144,16,16],wall_inner_corner_t_top_left:[80,160,16,16],wall_inner_corner_t_top_right:[64,160,16,16],crate:[288,298,16,22],column_top:[80,80,16,16],column_mid:[80,96,16,16],column_base:[80,112,16,16]},wall_anim:{wall_fountain_mid_red:[64,16,16,16],wall_fountain_basin_red:[64,32,16,16],wall_fountain_mid_blue:[64,48,16,16],wall_fountain_basin_blue:[64,64,16,16]},floor:{floor_1:[16,64,16,16],floor_2:[32,64,16,16],floor_3:[48,64,16,16],floor_4:[16,80,16,16],floor_5:[32,80,16,16],floor_6:[48,80,16,16],floor_7:[16,96,16,16],floor_8:[32,96,16,16],wall_goo_base:[64,96,16,16],skull:[288,320,16,16]},interactable:{floor_ladder:[48,96,16,16],hole:[96,144,16,16],edge:[96,128,16,16]},interactable_anim:{spikes:[16,176,16,16],switch_red:[16,192,16,16],switch_blue:[48,192,16,16],lever:[80,192,16,16],chest_empty:[320,288,16,16],chest_full:[320,304,16,16],chest_mimic:[320,320,16,16],coin:[288,272,8,8]},doors:{doors_all:[16,221,64,35],doors_frame_left:[16,224,16,32],doors_frame_top:[32,221,32,3],"doors_frame_right:":[63,224,16,32],doors_leaf_closed:[32,224,32,32],doors_leaf_open:[80,224,32,32]},weapon:{weapon_knife:[293,18,6,13],weapon_rusty_sword:[307,26,10,21],weapon_regular_sword:[323,26,10,21],weapon_red_gem_sword:[339,26,10,21],weapon_big_hammer:[291,42,10,37],weapon_hammer:[307,55,10,24],weapon_baton_with_spikes:[323,57,10,22],weapon_mace:[339,55,10,24],weapon_katana:[293,82,6,29],weapon_saw_sword:[307,86,10,25],weapon_anime_sword:[322,81,12,30],weapon_axe:[341,90,9,21],weapon_machete:[294,121,5,22],weapon_cleaver:[310,124,8,19],weapon_duel_sword:[325,113,9,30],weapon_knight_sword:[339,114,10,29],weapon_golden_sword:[291,153,10,22],weapon_lavish_sword:[307,145,10,30],weapon_red_magic_staff:[324,145,8,30],weapon_green_magic_staff:[340,145,8,30],weapon_spear:[293,177,6,30]},potion:{flask_big_red:[288,224,16,16],flask_big_blue:[304,224,16,16],flask_big_green:[320,224,16,16],flask_big_yellow:[336,224,16,16],flask_red:[288,240,16,16],flask_blue:[304,240,16,16],flask_green:[320,240,16,16],flask_yellow:[336,240,16,16]},enemy:{tiny_zombie:[368,16,16,16],goblin:[368,32,16,16],imp:[368,48,16,16],skelet:[368,80,16,16],muddy:[368,112,16,16],swampy:[432,112,16,16],zombie:[368,144,16,16],ice_zombie:[432,144,16,16],masked_orc:[368,172,16,20],orc_warrior:[368,204,16,20],orc_shaman:[368,236,16,20],necromancer:[368,268,16,20],wogol:[368,300,16,20],chort:[368,328,16,24],big_zombie:[16,270,32,34],ogre:[16,320,32,32],big_demon:[16,364,32,36]},player:[128,228,16,28]}},"./assets/ts/main.ts":function(e,t,n){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=s(n("./assets/ts/game/game.ts"));document.addEventListener("DOMContentLoaded",(()=>{var e,t,n,s;const i=window.localStorage.getItem("mapWidth"),l=window.localStorage.getItem("mapHeight"),r=window.localStorage.getItem("elements"),o=document.getElementById("chooseResolution"),d=document.getElementById("unsavedData"),c=document.getElementById("divCanvas"),h=document.getElementById("btnCredits"),p=document.getElementById("btnSaveMap");i&&l&&r?d.style.display="block":o.style.display="block",null===(e=document.getElementById("btnUnsavedDataYes"))||void 0===e||e.addEventListener("click",(()=>{h.style.display="block",p.style.display="block",d.style.display="none",c.style.display="flex",new a.default(parseInt(i),parseInt(l),r).main()})),null===(t=document.getElementById("btnUnsavedDataNo"))||void 0===t||t.addEventListener("click",(()=>{d.style.display="none",o.style.display="block"})),null===(n=document.getElementById("btnCreateMap"))||void 0===n||n.addEventListener("click",(()=>{const e=document.getElementById("width"),t=document.getElementById("height"),n=parseInt(e.value),s=parseInt(t.value);n&&s&&(h.style.display="block",p.style.display="block",o.style.display="none",c.style.display="flex",new a.default(n,s).main())})),null===(s=document.getElementById("btnLoadMap"))||void 0===s||s.addEventListener("click",(()=>{const e=document.getElementById("inputJSON");e.addEventListener("change",(function(){if(this.files&&"application/json"===this.files[0].type){const e=new FileReader;e.addEventListener("load",(e=>{if(e.target){const t=e.target.result,n=JSON.parse(t),s=parseInt(n.width),i=parseInt(n.height),l=JSON.stringify(n.elements);h.style.display="block",p.style.display="block",o.style.display="none",c.style.display="flex",new a.default(s,i,l).main()}})),e.readAsText(this.files[0])}})),e.click()}))}))},"./assets/ts/misc/constants.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.GameState=t.TILE_SIZE=t.SPRITESHEET=t.GAME_HEIGHT=t.GAME_WIDTH=void 0,t.GAME_WIDTH=320,t.GAME_HEIGHT=180,t.SPRITESHEET="./assets/img/spritesheet.png",t.TILE_SIZE=16,function(e){e[e.INITIALIZING=0]="INITIALIZING",e[e.MAINMENU=1]="MAINMENU",e[e.PLAY=2]="PLAY",e[e.CUTSCENE=3]="CUTSCENE",e[e.PAUSEMENU=4]="PAUSEMENU",e[e.ENDING=5]="ENDING"}(t.GameState||(t.GameState={}))},"./assets/ts/misc/html.ts":function(e,t,n){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=s(n("./assets/ts/graphics/graphics.ts")),i=s(n("./assets/ts/game/game.ts"));t.default=class{constructor(e){this.spanFPS=document.getElementById("fpsCounter"),this.btnCredits=document.getElementById("btnCredits"),this.modalCredits=document.getElementById("modalCredits"),this.btnToggleFPS=document.getElementById("toggleFPS"),this.elements=document.getElementById("elements"),this.scale=e,this.spanFPS.style.display="none",this.modalCredits.style.display="none",this.initializeEvents()}initializeEvents(){this.btnCredits.addEventListener("click",(()=>{"none"===this.modalCredits.style.display?this.modalCredits.style.display="block":this.modalCredits.style.display="none"})),this.btnToggleFPS.addEventListener("click",(()=>{"block"===this.spanFPS.style.display?this.spanFPS.style.display="none":this.spanFPS.style.display="block"}))}createElements(){const e=document.createElement("div");e.className="break";const t=document.createElement("span");t.innerHTML="Wall:";const n=document.createElement("div");n.className="break",this.elements.append(e),this.elements.append(t),this.elements.append(n),a.default.wall.forEach(((e,t)=>{this.appendElements(e,t,"wall")}));const s=document.createElement("div");s.className="break";const i=document.createElement("span");i.innerHTML="WallAnim:";const l=document.createElement("div");l.className="break",this.elements.append(s),this.elements.append(i),this.elements.append(l),a.default.wallAnim.forEach(((e,t)=>{this.appendElements(e,t,"wallAnim")}));const r=document.createElement("div");r.className="break";const o=document.createElement("span");o.innerHTML="Floor:";const d=document.createElement("div");d.className="break",this.elements.append(r),this.elements.append(o),this.elements.append(d),a.default.floor.forEach(((e,t)=>{this.appendElements(e,t,"floor")}));const c=document.createElement("div");c.className="break";const h=document.createElement("span");h.innerHTML="Interactable:";const p=document.createElement("div");p.className="break",this.elements.append(c),this.elements.append(h),this.elements.append(p),a.default.interactable.forEach(((e,t)=>{this.appendElements(e,t,"interactable")}));const m=document.createElement("div");m.className="break";const u=document.createElement("span");u.innerHTML="InteractableAnim:";const f=document.createElement("div");f.className="break",this.elements.append(m),this.elements.append(u),this.elements.append(f),a.default.interactableAnim.forEach(((e,t)=>{this.appendElements(e,t,"interactableAnim")}));const w=document.createElement("div");w.className="break";const g=document.createElement("span");g.innerHTML="Doors:";const _=document.createElement("div");_.className="break",this.elements.append(w),this.elements.append(g),this.elements.append(_),a.default.doors.forEach(((e,t)=>{this.appendElements(e,t,"doors")}));const E=document.createElement("div");E.className="break";const y=document.createElement("span");y.innerHTML="Weapon:";const v=document.createElement("div");v.className="break",this.elements.append(E),this.elements.append(y),this.elements.append(v),a.default.weapon.forEach(((e,t)=>{this.appendElements(e,t,"weapon")}));const b=document.createElement("div");b.className="break";const I=document.createElement("span");I.innerHTML="Potion:";const S=document.createElement("div");S.className="break",this.elements.append(b),this.elements.append(I),this.elements.append(S),a.default.potion.forEach(((e,t)=>{this.appendElements(e,t,"potion")}));const H=document.createElement("div");H.className="break";const k=document.createElement("span");k.innerHTML="Enemy:";const T=document.createElement("div");T.className="break",this.elements.append(H),this.elements.append(k),this.elements.append(T),a.default.enemy.forEach(((e,t)=>{this.appendElements(e,t,"enemy")}));const A=document.createElement("div");A.className="break";const x=document.createElement("span");x.innerHTML="Player:";const C=document.createElement("div");C.className="break",this.elements.append(A),this.elements.append(x),this.elements.append(C),this.appendElements(a.default.player,0,"player")}appendElements(e,t,n){const s=document.createElement("canvas");s.draggable=!0,s.width=e.sprite.width*this.scale,s.height=e.sprite.height*this.scale,s.style.margin="5px",s.title=e.name,s.id=e.name,s.dataset.index=""+t,s.dataset.array=n,s.addEventListener("dragstart",(e=>{i.default.dragged=s,i.default.dragEvent=e}));const a=s.getContext("2d");a.scale(this.scale,this.scale),a.imageSmoothingEnabled=!1,a.drawImage(e.sprite,0,0),this.elements.append(s)}}}},t={};(function n(s){var a=t[s];if(void 0!==a)return a.exports;var i=t[s]={exports:{}};return e[s].call(i.exports,i,i.exports,n),i.exports})("./assets/ts/main.ts")})();
//# sourceMappingURL=bundle.js.map