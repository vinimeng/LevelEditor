{"version":3,"sources":["webpack://level-editor/./assets/ts/game/element.ts","webpack://level-editor/./assets/ts/game/game.ts","webpack://level-editor/./assets/ts/graphics/graphics.ts","webpack://level-editor/./assets/ts/graphics/spritesheet.cheatsheet.ts","webpack://level-editor/./assets/ts/main.ts","webpack://level-editor/./assets/ts/misc/constants.ts","webpack://level-editor/./assets/ts/misc/html.ts","webpack://level-editor/webpack/bootstrap","webpack://level-editor/webpack/startup"],"names":["Object","defineProperty","exports","value","default","x","y","width","height","id","type","sprite","index","this","drawWithHalfOpacity","context2D","globalAlpha","drawImage","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__importDefault","mod","__esModule","graphics_1","constants_1","html_1","element_1","Game","mapWidth","mapHeight","savedData","window","localStorage","setItem","String","elements","Array","graphics","isRunning","draggedCanvasElement","mouseDown","appDiv","document","getElementById","divCanvas","canvas","getContext","btnSaveMap","snapToGrid","scale","determineScale","html","loadAssets","createElements","loadSavedData","initializeEvents","adjustCanvas","drawBackground","run","i","length","tick","render","self","frames","last","requestAnimationFrame","loop","now","spanFPS","style","display","innerText","GAME_WIDTH","GAME_HEIGHT","imageSmoothingEnabled","fillStyle","fillRect","grid","divWidth","offsetWidth","divHeight","offsetHeight","finalScale","Math","floor","addEventListener","preventDefault","dropEventHandler","mouseDownEventHandler","mouseMoveEventHandler","mouseUpEventHandler","contextMenuEventHandler","saveMap","setInterval","JSON","stringify","loadGraphics","sprtIndex","Number","dragged","dataset","sprtArray","array","scrollTop","parentElement","round","offsetX","dragEvent","clientX","offsetLeft","offsetY","clientY","offsetTop","checked","TILE_SIZE","nameW","wall","name","sprtW","push","nameWA","wallAnim","sprtWA","nameF","sprtF","nameI","interactable","sprtI","nameIA","interactableAnim","sprtIA","nameD","doors","sprtD","nameWe","weapon","sprtWe","nameP","potion","sprtP","nameE","enemy","sprtE","namePl","player","sprtPl","mouseX","mouseY","element","outerX","outerY","diffX","diffY","splice","json","parse","parseInt","clear","mapJSON","blob","Blob","url","URL","createObjectURL","a","createElement","setAttribute","click","spritesheet_cheatsheet_1","Graphics","spritesheet","setSpritesheet","createGridImage","cutSprite","CHEATSHEET","spriteName","spriteCoord","wall_anim","interactable_anim","onload","onerror","src","SPRITESHEET","img","size","svg","createImageBitmap","game_1","_a","_b","_c","_d","getItem","chooseResolution","unsavedData","btnCredits","main","inputWidth","inputHeight","inputJSON","files","fr","FileReader","target","mapJSONString","readAsText","GameState","modalCredits","btnToggleFPS","divBreakWallBefore","className","spanWall","innerHTML","divBreakWallAfter","append","forEach","appendElements","divBreakWallAnimBefore","spanWallAnim","divBreakWallAnimAfter","divBreakFloorBefore","spanFloor","divBreakFloorAfter","divBreakInteractableBefore","spanInteractable","divBreakInteractableAfter","divBreakInteractableAnimBefore","spanInteractableAnim","divBreakInteractableAnimAfter","divBreakDoorsBefore","spanDoors","divBreakDoorsAfter","divBreakWeaponBefore","spanWeapon","divBreakWeaponAfter","divBreakPotionBefore","spanPotion","divBreakPotionAfter","divBreakEnemyBefore","spanEnemy","divBreakEnemyAfter","divBreakPlayerBefore","spanPlayer","divBreakPlayerAfter","draggable","margin","title","ctx","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","module","__webpack_modules__","call"],"mappings":"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","file":"bundle.js","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Classe para instanciar elementos\r\n * que formaram o mapa\r\n */\r\nclass Element {\r\n    /**\r\n     * Construtor da classe Element\r\n     *\r\n     * @param x\r\n     * @param y\r\n     * @param width\r\n     * @param height\r\n     * @param id\r\n     * @param type\r\n     * @param sprite\r\n     * @param index\r\n     */\r\n    constructor(x, y, width, height, id, type, sprite, index) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.id = id;\r\n        this.type = type;\r\n        this.sprite = sprite;\r\n        this.index = index;\r\n        this.drawWithHalfOpacity = false;\r\n    }\r\n    /**\r\n     * Lógica executada pelo elemento\r\n     * a cada tick (frame)\r\n     */\r\n    tick() {\r\n    }\r\n    /**\r\n     * Renderização do elemento feita\r\n     * a cada frame\r\n     *\r\n     * @param context2D\r\n     */\r\n    render(context2D) {\r\n        if (this.drawWithHalfOpacity) {\r\n            context2D.globalAlpha = 0.5;\r\n            context2D.drawImage(this.sprite, this.x, this.y, this.width, this.height);\r\n            context2D.globalAlpha = 1;\r\n        }\r\n        else {\r\n            context2D.drawImage(this.sprite, this.x, this.y, this.width, this.height);\r\n        }\r\n    }\r\n}\r\nexports.default = Element;\r\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst graphics_1 = __importDefault(require(\"../graphics/graphics\"));\r\nconst constants_1 = require(\"../misc/constants\");\r\nconst html_1 = __importDefault(require(\"../misc/html\"));\r\nconst element_1 = __importDefault(require(\"./element\"));\r\n/**\r\n * Classe principal do editor de level,\r\n * se baseia na classe do game para qual\r\n * serve como editor de level\r\n */\r\nclass Game {\r\n    /**\r\n     * Construtor da classe Game\r\n     *\r\n     * @param mapWidth\r\n     * @param mapHeight\r\n     * @param savedData\r\n     */\r\n    constructor(mapWidth = 0, mapHeight = 0, savedData = null) {\r\n        this.mapWidth = mapWidth;\r\n        this.mapHeight = mapHeight;\r\n        window.localStorage.setItem('mapWidth', String(this.mapWidth));\r\n        window.localStorage.setItem('mapHeight', String(this.mapHeight));\r\n        this.elements = new Array();\r\n        this.graphics = new graphics_1.default();\r\n        this.savedData = savedData;\r\n        this.isRunning = false;\r\n        this.draggedCanvasElement = null;\r\n        this.mouseDown = null;\r\n        this.appDiv = document.getElementById('app');\r\n        this.divCanvas = document.getElementById('divCanvas');\r\n        this.canvas = document.getElementById('canvas');\r\n        this.context2D = this.canvas.getContext('2d');\r\n        this.btnSaveMap = document.getElementById('btnSaveMap');\r\n        this.snapToGrid = document.getElementById('snapToGrid');\r\n        this.scale = this.determineScale();\r\n        this.html = new html_1.default(this.scale);\r\n    }\r\n    /**\r\n     * Carrega assets\r\n     * Cria elementos para poderem ser arrastado\r\n     * Carrega mapa salvo (caso exista)\r\n     * Inicializa eventos\r\n     * Ajusta o canvas\r\n     * Inicia o loop\r\n     */\r\n    main() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.loadAssets();\r\n            this.html.createElements();\r\n            if (this.savedData) {\r\n                this.loadSavedData(this.savedData);\r\n            }\r\n            this.initializeEvents();\r\n            this.adjustCanvas();\r\n            this.drawBackground();\r\n            this.run();\r\n        });\r\n    }\r\n    /**\r\n     * Lógica executada a cada tick (frame)\r\n     */\r\n    tick() {\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            this.elements[i].tick();\r\n        }\r\n    }\r\n    /**\r\n     * Renderização executada a cada frame\r\n     */\r\n    render() {\r\n        this.drawBackground();\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            this.elements[i].render(this.context2D);\r\n        }\r\n    }\r\n    /**\r\n     * Função para inicializar o loop principal\r\n     */\r\n    run() {\r\n        let self = this;\r\n        let frames = 0;\r\n        let last = 0;\r\n        /**\r\n         * Loop principal,\r\n         * é executado a cada nova call para\r\n         * redesenhar a tela feita pelo navegador\r\n         * (cerca do refresh rate do monitor)\r\n         *\r\n         * @param now\r\n         */\r\n        function loop(now) {\r\n            self.tick();\r\n            self.render();\r\n            if (self.html.spanFPS.style.display === 'block') {\r\n                frames++;\r\n                if (now - last > 1000) {\r\n                    self.html.spanFPS.innerText = `${frames}fps`;\r\n                    frames = 0;\r\n                    last = now;\r\n                }\r\n            }\r\n            if (self.isRunning) {\r\n                window.requestAnimationFrame(loop);\r\n            }\r\n        }\r\n        this.isRunning = true;\r\n        window.requestAnimationFrame(loop);\r\n    }\r\n    /**\r\n     * Ajusta a largura, altura, escala e\r\n     * desabilitar filtro de smoothing\r\n     * do canvas\r\n     */\r\n    adjustCanvas() {\r\n        this.divCanvas.style.width = (constants_1.GAME_WIDTH * this.scale) + 'px';\r\n        this.divCanvas.style.height = (constants_1.GAME_HEIGHT * this.scale) + 'px';\r\n        this.canvas.width = this.mapWidth * this.scale;\r\n        this.canvas.height = this.mapHeight * this.scale;\r\n        this.context2D.scale(this.scale, this.scale);\r\n        this.context2D.imageSmoothingEnabled = false;\r\n    }\r\n    /**\r\n     * Desenha o fundo preto e\r\n     * as linhas de grid no canvas\r\n     */\r\n    drawBackground() {\r\n        this.context2D.fillStyle = 'black';\r\n        this.context2D.fillRect(0, 0, this.mapWidth, this.mapHeight);\r\n        this.context2D.drawImage(graphics_1.default.grid, 0, 0, this.mapWidth, this.mapHeight);\r\n    }\r\n    /**\r\n     * Determina a escala de renderização do\r\n     * canvas a partir do tamanho da div pai\r\n     *\r\n     * @returns number\r\n     */\r\n    determineScale() {\r\n        const divWidth = this.appDiv.offsetWidth;\r\n        const divHeight = this.appDiv.offsetHeight;\r\n        let finalScale = divWidth / constants_1.GAME_WIDTH;\r\n        if (finalScale >= 1) {\r\n            finalScale = Math.floor(finalScale);\r\n            if (constants_1.GAME_WIDTH * finalScale > divWidth ||\r\n                constants_1.GAME_HEIGHT * finalScale > divHeight) {\r\n                finalScale = finalScale - 1;\r\n            }\r\n        }\r\n        if (finalScale < 1 && finalScale >= 0.75) {\r\n            finalScale = 0.75;\r\n        }\r\n        else if (finalScale < 0.75 && finalScale >= 0.5) {\r\n            finalScale = 0.5;\r\n        }\r\n        else if (finalScale < 0.5) {\r\n            finalScale = 0.25;\r\n        }\r\n        return finalScale;\r\n    }\r\n    /**\r\n     * Inicializa eventos relacionados ao canvas\r\n     */\r\n    initializeEvents() {\r\n        /**\r\n         * Reajusta a escala e o tamanho do canvas\r\n         * caso o navegador seja redimensionado\r\n         */\r\n        window.addEventListener('resize', () => {\r\n            this.scale = this.determineScale();\r\n            this.adjustCanvas();\r\n        });\r\n        /**\r\n         * Cancela a ação padrão do evento dragover\r\n         * para que possa ser possível largar elementos\r\n         * arrastados no canvas\r\n         */\r\n        this.canvas.addEventListener('dragover', (e) => {\r\n            e.preventDefault();\r\n            return false;\r\n        });\r\n        /**\r\n         * Associa handler com o evento drop do canvas\r\n         */\r\n        this.canvas.addEventListener('drop', (e) => {\r\n            this.dropEventHandler(e);\r\n        });\r\n        /**\r\n         * Associa handler com o evento mousedown do canvas\r\n         */\r\n        this.canvas.addEventListener('mousedown', (e) => {\r\n            this.mouseDownEventHandler(e);\r\n        });\r\n        /**\r\n         * Associa handler com o evento mousemove do canvas\r\n         */\r\n        this.canvas.addEventListener('mousemove', (e) => {\r\n            this.mouseMoveEventHandler(e);\r\n        });\r\n        /**\r\n         * Associa handler com o evento mouseup do canvas\r\n         */\r\n        this.canvas.addEventListener('mouseup', (e) => {\r\n            this.mouseUpEventHandler(e);\r\n        });\r\n        /**\r\n         * Associa handler com o evento contextmenu (botão\r\n         * direito do mouse) do canvas\r\n         */\r\n        this.canvas.addEventListener('contextmenu', (e) => {\r\n            this.contextMenuEventHandler(e);\r\n        });\r\n        /**\r\n         * Associa handler com o evento click do botão\r\n         * para salvar mapa\r\n         */\r\n        this.btnSaveMap.addEventListener('click', () => {\r\n            this.saveMap();\r\n        });\r\n        /**\r\n         * Define que a cada 30 segundos\r\n         * será salvo no localStorage o que estiver\r\n         * feito até o momento, evitando perdas por motivos\r\n         * externos\r\n         */\r\n        window.setInterval(() => {\r\n            window.localStorage.setItem('elements', JSON.stringify(this.elements));\r\n        }, 30000);\r\n    }\r\n    /**\r\n     * Carrega assets\r\n     */\r\n    loadAssets() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.graphics.loadGraphics(this.scale);\r\n        });\r\n    }\r\n    /**\r\n     * Handler do evento drop do canvas.\r\n     * Ao ser largado um elemento no canvas,\r\n     * essa função verifica qual elemento que é\r\n     * e qual posição ele foi largado, adicionando\r\n     * ao canvas um elemento de sprite igual\r\n     *\r\n     * @param e\r\n     */\r\n    dropEventHandler(e) {\r\n        const sprtIndex = Number(Game.dragged.dataset.index);\r\n        const sprtArray = String(Game.dragged.dataset.array);\r\n        const scrollTop = Game.dragged.parentElement ? Game.dragged.parentElement.scrollTop : 0;\r\n        let x = Math.round((e.offsetX - Game.dragEvent.clientX + Game.dragged.offsetLeft) / this.scale);\r\n        let y = Math.round((e.offsetY - Game.dragEvent.clientY + Game.dragged.offsetTop - scrollTop) / this.scale);\r\n        if (this.snapToGrid.checked) {\r\n            x = constants_1.TILE_SIZE * Math.round(x / constants_1.TILE_SIZE);\r\n            y = constants_1.TILE_SIZE * Math.round(y / constants_1.TILE_SIZE);\r\n        }\r\n        switch (sprtArray) {\r\n            case 'wall':\r\n                const nameW = graphics_1.default.wall[sprtIndex].name;\r\n                const sprtW = graphics_1.default.wall[sprtIndex].sprite;\r\n                this.elements.push(new element_1.default(x, y, sprtW.width, sprtW.height, nameW, sprtArray, sprtW, sprtIndex));\r\n                break;\r\n            case 'wallAnim':\r\n                const nameWA = graphics_1.default.wallAnim[sprtIndex].name;\r\n                const sprtWA = graphics_1.default.wallAnim[sprtIndex].sprite;\r\n                this.elements.push(new element_1.default(x, y, sprtWA.width, sprtWA.height, nameWA, sprtArray, sprtWA, sprtIndex));\r\n                break;\r\n            case 'floor':\r\n                const nameF = graphics_1.default.floor[sprtIndex].name;\r\n                const sprtF = graphics_1.default.floor[sprtIndex].sprite;\r\n                this.elements.push(new element_1.default(x, y, sprtF.width, sprtF.height, nameF, sprtArray, sprtF, sprtIndex));\r\n                break;\r\n            case 'interactable':\r\n                const nameI = graphics_1.default.interactable[sprtIndex].name;\r\n                const sprtI = graphics_1.default.interactable[sprtIndex].sprite;\r\n                this.elements.push(new element_1.default(x, y, sprtI.width, sprtI.height, nameI, sprtArray, sprtI, sprtIndex));\r\n                break;\r\n            case 'interactableAnim':\r\n                const nameIA = graphics_1.default.interactableAnim[sprtIndex].name;\r\n                const sprtIA = graphics_1.default.interactableAnim[sprtIndex].sprite;\r\n                this.elements.push(new element_1.default(x, y, sprtIA.width, sprtIA.height, nameIA, sprtArray, sprtIA, sprtIndex));\r\n                break;\r\n            case 'doors':\r\n                const nameD = graphics_1.default.doors[sprtIndex].name;\r\n                const sprtD = graphics_1.default.doors[sprtIndex].sprite;\r\n                this.elements.push(new element_1.default(x, y, sprtD.width, sprtD.height, nameD, sprtArray, sprtD, sprtIndex));\r\n                break;\r\n            case 'weapon':\r\n                const nameWe = graphics_1.default.weapon[sprtIndex].name;\r\n                const sprtWe = graphics_1.default.weapon[sprtIndex].sprite;\r\n                this.elements.push(new element_1.default(x, y, sprtWe.width, sprtWe.height, nameWe, sprtArray, sprtWe, sprtIndex));\r\n                break;\r\n            case 'potion':\r\n                const nameP = graphics_1.default.potion[sprtIndex].name;\r\n                const sprtP = graphics_1.default.potion[sprtIndex].sprite;\r\n                this.elements.push(new element_1.default(x, y, sprtP.width, sprtP.height, nameP, sprtArray, sprtP, sprtIndex));\r\n                break;\r\n            case 'enemy':\r\n                const nameE = graphics_1.default.enemy[sprtIndex].name;\r\n                const sprtE = graphics_1.default.enemy[sprtIndex].sprite;\r\n                this.elements.push(new element_1.default(x, y, sprtE.width, sprtE.height, nameE, sprtArray, sprtE, sprtIndex));\r\n                break;\r\n            case 'player':\r\n                const namePl = graphics_1.default.player.name;\r\n                const sprtPl = graphics_1.default.player.sprite;\r\n                this.elements.push(new element_1.default(x, y, sprtPl.width, sprtPl.height, namePl, sprtArray, sprtPl, sprtIndex));\r\n                break;\r\n        }\r\n    }\r\n    /**\r\n     * Handler do evento mousedown do canvas.\r\n     * Verifica se o mouse foi clicado em cima de\r\n     * algum elemento do canvas, se for, guarda esse\r\n     * elemento e a diferença da posição do mouse e\r\n     * desse elemento\r\n     *\r\n     * @param e\r\n     */\r\n    mouseDownEventHandler(e) {\r\n        const mouseX = e.offsetX / this.scale;\r\n        const mouseY = e.offsetY / this.scale;\r\n        for (let i = this.elements.length - 1; i >= 0; i--) {\r\n            const element = this.elements[i];\r\n            const x = element.x;\r\n            const y = element.y;\r\n            const outerX = element.x + element.width;\r\n            const outerY = element.y + element.height;\r\n            if ((mouseX >= x && mouseX <= outerX) &&\r\n                (mouseY >= y && mouseY <= outerY)) {\r\n                this.draggedCanvasElement = element;\r\n                this.mouseDown = { diffX: x - mouseX, diffY: y - mouseY };\r\n                element.drawWithHalfOpacity = true;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Handler do evento mousemove do canvas.\r\n     * Movimento o elemento que está sendo\r\n     * arrastado junto as coordenadas do mouse,\r\n     * dando a sensação de arrasto\r\n     *\r\n     * @param e\r\n     */\r\n    mouseMoveEventHandler(e) {\r\n        if (this.mouseDown) {\r\n            const mouseX = (e.offsetX / this.scale) + this.mouseDown.diffX;\r\n            const mouseY = (e.offsetY / this.scale) + this.mouseDown.diffY;\r\n            if (this.draggedCanvasElement) {\r\n                this.draggedCanvasElement.x = mouseX;\r\n                this.draggedCanvasElement.y = mouseY;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Handler do evento mousemove do canvas.\r\n     * Posiciona elemento que estava sendo arrastado\r\n     * na coordenada em que o mouse deixou de ser\r\n     * clicado\r\n     *\r\n     * @param e\r\n     */\r\n    mouseUpEventHandler(e) {\r\n        if (this.mouseDown) {\r\n            let mouseX = (e.offsetX / this.scale) + this.mouseDown.diffX;\r\n            let mouseY = (e.offsetY / this.scale) + this.mouseDown.diffY;\r\n            if (this.snapToGrid.checked) {\r\n                mouseX = constants_1.TILE_SIZE * Math.round(mouseX / constants_1.TILE_SIZE);\r\n                mouseY = constants_1.TILE_SIZE * Math.round(mouseY / constants_1.TILE_SIZE);\r\n            }\r\n            if (this.draggedCanvasElement) {\r\n                this.draggedCanvasElement.x = mouseX;\r\n                this.draggedCanvasElement.y = mouseY;\r\n                this.draggedCanvasElement.drawWithHalfOpacity = false;\r\n                this.mouseDown = null;\r\n                this.draggedCanvasElement = null;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Handler do evento contextmenu do canvas.\r\n     * Verifica se o botão direito do mouse\r\n     * foi clicado em cima de algum elemento, se\r\n     * tiver sido, apaga esse elemento\r\n     *\r\n     * @param e\r\n     */\r\n    contextMenuEventHandler(e) {\r\n        e.preventDefault();\r\n        const mouseX = e.offsetX / this.scale;\r\n        const mouseY = e.offsetY / this.scale;\r\n        for (let i = this.elements.length - 1; i >= 0; i--) {\r\n            const element = this.elements[i];\r\n            const outerX = element.x + element.width;\r\n            const outerY = element.y + element.height;\r\n            if ((mouseX >= element.x && mouseX <= outerX) &&\r\n                (mouseY >= element.y && mouseY <= outerY)) {\r\n                this.elements.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Carrega os dados salvos de um mapa\r\n     * e cria os elementos na coordenadas\r\n     * especificadas\r\n     *\r\n     * @param savedData\r\n     */\r\n    loadSavedData(savedData) {\r\n        let json = JSON.parse(savedData);\r\n        for (let element in json) {\r\n            switch (String(json[element].type)) {\r\n                case 'wall':\r\n                    this.elements.push(new element_1.default(parseInt(json[element].x), parseInt(json[element].y), parseInt(json[element].width), parseInt(json[element].height), String(json[element].id), String(json[element].type), graphics_1.default.wall[parseInt(json[element].index)].sprite, parseInt(json[element].index)));\r\n                    break;\r\n                case 'wallAnim':\r\n                    this.elements.push(new element_1.default(parseInt(json[element].x), parseInt(json[element].y), parseInt(json[element].width), parseInt(json[element].height), String(json[element].id), String(json[element].type), graphics_1.default.wallAnim[parseInt(json[element].index)].sprite, parseInt(json[element].index)));\r\n                    break;\r\n                case 'floor':\r\n                    this.elements.push(new element_1.default(parseInt(json[element].x), parseInt(json[element].y), parseInt(json[element].width), parseInt(json[element].height), String(json[element].id), String(json[element].type), graphics_1.default.floor[parseInt(json[element].index)].sprite, parseInt(json[element].index)));\r\n                    break;\r\n                case 'interactable':\r\n                    this.elements.push(new element_1.default(parseInt(json[element].x), parseInt(json[element].y), parseInt(json[element].width), parseInt(json[element].height), String(json[element].id), String(json[element].type), graphics_1.default.interactable[parseInt(json[element].index)].sprite, parseInt(json[element].index)));\r\n                    break;\r\n                case 'interactableAnim':\r\n                    this.elements.push(new element_1.default(parseInt(json[element].x), parseInt(json[element].y), parseInt(json[element].width), parseInt(json[element].height), String(json[element].id), String(json[element].type), graphics_1.default.interactableAnim[parseInt(json[element].index)].sprite, parseInt(json[element].index)));\r\n                    break;\r\n                case 'doors':\r\n                    this.elements.push(new element_1.default(parseInt(json[element].x), parseInt(json[element].y), parseInt(json[element].width), parseInt(json[element].height), String(json[element].id), String(json[element].type), graphics_1.default.doors[parseInt(json[element].index)].sprite, parseInt(json[element].index)));\r\n                    break;\r\n                case 'weapon':\r\n                    this.elements.push(new element_1.default(parseInt(json[element].x), parseInt(json[element].y), parseInt(json[element].width), parseInt(json[element].height), String(json[element].id), String(json[element].type), graphics_1.default.weapon[parseInt(json[element].index)].sprite, parseInt(json[element].index)));\r\n                    break;\r\n                case 'potion':\r\n                    this.elements.push(new element_1.default(parseInt(json[element].x), parseInt(json[element].y), parseInt(json[element].width), parseInt(json[element].height), String(json[element].id), String(json[element].type), graphics_1.default.potion[parseInt(json[element].index)].sprite, parseInt(json[element].index)));\r\n                    break;\r\n                case 'enemy':\r\n                    this.elements.push(new element_1.default(parseInt(json[element].x), parseInt(json[element].y), parseInt(json[element].width), parseInt(json[element].height), String(json[element].id), String(json[element].type), graphics_1.default.enemy[parseInt(json[element].index)].sprite, parseInt(json[element].index)));\r\n                    break;\r\n                case 'player':\r\n                    this.elements.push(new element_1.default(parseInt(json[element].x), parseInt(json[element].y), parseInt(json[element].width), parseInt(json[element].height), String(json[element].id), String(json[element].type), graphics_1.default.player.sprite, parseInt(json[element].index)));\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Cria JSON com informações do mapa\r\n     * a ser salvo e disponibiliza JSON para\r\n     * download\r\n     */\r\n    saveMap() {\r\n        window.localStorage.clear();\r\n        const mapJSON = {\r\n            'width': this.mapWidth,\r\n            'height': this.mapHeight,\r\n            'elements': this.elements\r\n        };\r\n        const blob = new Blob([JSON.stringify(mapJSON)], { type: 'application/json' });\r\n        const url = URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        a.setAttribute('href', url);\r\n        a.setAttribute('download', 'map.json');\r\n        a.click();\r\n    }\r\n}\r\nexports.default = Game;\r\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst constants_1 = require(\"../misc/constants\");\r\nconst spritesheet_cheatsheet_1 = require(\"./spritesheet.cheatsheet\");\r\n/**\r\n * Classe para lidar com os gráficos\r\n * do editor de level\r\n */\r\nclass Graphics {\r\n    /**\r\n     * Carrega os sprite e os separa\r\n     * conforme seu tipo em arrays\r\n     *\r\n     * @param scale\r\n     */\r\n    loadGraphics(scale) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const spritesheet = yield this.setSpritesheet();\r\n            Graphics.grid = yield this.createGridImage(scale);\r\n            let sprite = yield this.cutSprite(spritesheet, spritesheet_cheatsheet_1.CHEATSHEET.player[0], spritesheet_cheatsheet_1.CHEATSHEET.player[1], spritesheet_cheatsheet_1.CHEATSHEET.player[2], spritesheet_cheatsheet_1.CHEATSHEET.player[3]);\r\n            Graphics.player = {\r\n                name: 'player',\r\n                sprite: sprite\r\n            };\r\n            for (const spriteName in spritesheet_cheatsheet_1.CHEATSHEET.wall) {\r\n                const spriteCoord = spritesheet_cheatsheet_1.CHEATSHEET.wall[spriteName];\r\n                const sprt = yield this.cutSprite(spritesheet, spriteCoord[0], spriteCoord[1], spriteCoord[2], spriteCoord[3]);\r\n                const wall = {\r\n                    name: spriteName,\r\n                    sprite: sprt\r\n                };\r\n                Graphics.wall.push(wall);\r\n            }\r\n            for (const spriteName in spritesheet_cheatsheet_1.CHEATSHEET.wall_anim) {\r\n                const spriteCoord = spritesheet_cheatsheet_1.CHEATSHEET.wall_anim[spriteName];\r\n                const sprt = yield this.cutSprite(spritesheet, spriteCoord[0], spriteCoord[1], spriteCoord[2], spriteCoord[3]);\r\n                const wall = {\r\n                    name: spriteName,\r\n                    sprite: sprt\r\n                };\r\n                Graphics.wallAnim.push(wall);\r\n            }\r\n            for (const spriteName in spritesheet_cheatsheet_1.CHEATSHEET.floor) {\r\n                const spriteCoord = spritesheet_cheatsheet_1.CHEATSHEET.floor[spriteName];\r\n                const sprt = yield this.cutSprite(spritesheet, spriteCoord[0], spriteCoord[1], spriteCoord[2], spriteCoord[3]);\r\n                const floor = {\r\n                    name: spriteName,\r\n                    sprite: sprt\r\n                };\r\n                Graphics.floor.push(floor);\r\n            }\r\n            for (const spriteName in spritesheet_cheatsheet_1.CHEATSHEET.interactable) {\r\n                const spriteCoord = spritesheet_cheatsheet_1.CHEATSHEET.interactable[spriteName];\r\n                const sprt = yield this.cutSprite(spritesheet, spriteCoord[0], spriteCoord[1], spriteCoord[2], spriteCoord[3]);\r\n                const interactable = {\r\n                    name: spriteName,\r\n                    sprite: sprt\r\n                };\r\n                Graphics.interactable.push(interactable);\r\n            }\r\n            for (const spriteName in spritesheet_cheatsheet_1.CHEATSHEET.interactable_anim) {\r\n                const spriteCoord = spritesheet_cheatsheet_1.CHEATSHEET.interactable_anim[spriteName];\r\n                const sprt = yield this.cutSprite(spritesheet, spriteCoord[0], spriteCoord[1], spriteCoord[2], spriteCoord[3]);\r\n                const interactableAnim = {\r\n                    name: spriteName,\r\n                    sprite: sprt\r\n                };\r\n                Graphics.interactableAnim.push(interactableAnim);\r\n            }\r\n            for (const spriteName in spritesheet_cheatsheet_1.CHEATSHEET.doors) {\r\n                const spriteCoord = spritesheet_cheatsheet_1.CHEATSHEET.doors[spriteName];\r\n                const sprt = yield this.cutSprite(spritesheet, spriteCoord[0], spriteCoord[1], spriteCoord[2], spriteCoord[3]);\r\n                const doors = {\r\n                    name: spriteName,\r\n                    sprite: sprt\r\n                };\r\n                Graphics.doors.push(doors);\r\n            }\r\n            for (const spriteName in spritesheet_cheatsheet_1.CHEATSHEET.weapon) {\r\n                const spriteCoord = spritesheet_cheatsheet_1.CHEATSHEET.weapon[spriteName];\r\n                const sprt = yield this.cutSprite(spritesheet, spriteCoord[0], spriteCoord[1], spriteCoord[2], spriteCoord[3]);\r\n                const weapon = {\r\n                    name: spriteName,\r\n                    sprite: sprt\r\n                };\r\n                Graphics.weapon.push(weapon);\r\n            }\r\n            for (const spriteName in spritesheet_cheatsheet_1.CHEATSHEET.potion) {\r\n                const spriteCoord = spritesheet_cheatsheet_1.CHEATSHEET.potion[spriteName];\r\n                const sprt = yield this.cutSprite(spritesheet, spriteCoord[0], spriteCoord[1], spriteCoord[2], spriteCoord[3]);\r\n                const potion = {\r\n                    name: spriteName,\r\n                    sprite: sprt\r\n                };\r\n                Graphics.potion.push(potion);\r\n            }\r\n            for (const spriteName in spritesheet_cheatsheet_1.CHEATSHEET.enemy) {\r\n                const spriteCoord = spritesheet_cheatsheet_1.CHEATSHEET.enemy[spriteName];\r\n                const sprt = yield this.cutSprite(spritesheet, spriteCoord[0], spriteCoord[1], spriteCoord[2], spriteCoord[3]);\r\n                const enemy = {\r\n                    name: spriteName,\r\n                    sprite: sprt\r\n                };\r\n                Graphics.enemy.push(enemy);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Carrega spritesheet base,\r\n     * de onde irão sair os sprites\r\n     *\r\n     * @returns Promise\r\n     */\r\n    setSpritesheet() {\r\n        const spritesheet = document.createElement('img');\r\n        return new Promise((resolve, reject) => {\r\n            spritesheet.onload = () => resolve(spritesheet);\r\n            spritesheet.onerror = reject;\r\n            spritesheet.src = constants_1.SPRITESHEET;\r\n        });\r\n    }\r\n    /**\r\n     * Cria imagem de um grid dinâmicamente\r\n     *\r\n     * @param scale\r\n     * @returns Promise\r\n     */\r\n    createGridImage(scale) {\r\n        const img = document.createElement('img');\r\n        const size = constants_1.TILE_SIZE * scale;\r\n        const color = 'rgba(187, 128, 130, 0.4)';\r\n        const svg = new Blob([`\r\n            <svg width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <defs>\r\n                    <pattern id=\"grid\" width=\"${size}\" height=\"${size}\" patternUnits=\"userSpaceOnUse\">\r\n                        <path d=\"M ${size} 0 L 0 0 0 ${size}\" fill=\"none\" stroke=\"${color}\" stroke-width=\"${scale}\" />\r\n                    </pattern>\r\n                </defs>\r\n                <rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\"/>\r\n            </svg>\r\n        `], { type: 'image/svg+xml;charset=utf-8' });\r\n        const url = window.URL.createObjectURL(svg);\r\n        return new Promise((resolve, reject) => {\r\n            img.onload = () => resolve(img);\r\n            img.onerror = reject;\r\n            img.src = url;\r\n        });\r\n    }\r\n    /**\r\n     * Corta sprite do spritesheet\r\n     *\r\n     * @param spritesheet\r\n     * @param x\r\n     * @param y\r\n     * @param width\r\n     * @param height\r\n     * @returns Promise\r\n     */\r\n    cutSprite(spritesheet, x, y, width, height) {\r\n        return createImageBitmap(spritesheet, x, y, width, height);\r\n    }\r\n}\r\nexports.default = Graphics;\r\n/**\r\n * Array contendo os sprites do tipo wall\r\n *\r\n * @access public static\r\n */\r\nGraphics.wall = new Array();\r\n/**\r\n * Array contendo os sprites do tipo wallAnim\r\n *\r\n * @access public static\r\n */\r\nGraphics.wallAnim = new Array();\r\n/**\r\n * Array contendo os sprites do tipo floor\r\n *\r\n * @access public static\r\n */\r\nGraphics.floor = new Array();\r\n/**\r\n * Array contendo os sprites do tipo interactable\r\n *\r\n * @access public static\r\n */\r\nGraphics.interactable = new Array();\r\n/**\r\n * Array contendo os sprites do tipo interactableAnim\r\n *\r\n * @access public static\r\n */\r\nGraphics.interactableAnim = new Array();\r\n/**\r\n * Array contendo os sprites do tipo doors\r\n *\r\n * @access public static\r\n */\r\nGraphics.doors = new Array();\r\n/**\r\n * Array contendo os sprites do tipo weapon\r\n *\r\n * @access public static\r\n */\r\nGraphics.weapon = new Array();\r\n/**\r\n * Array contendo os sprites do tipo potion\r\n *\r\n * @access public static\r\n */\r\nGraphics.potion = new Array();\r\n/**\r\n * Array contendo os sprites do tipo enemy\r\n *\r\n * @access public static\r\n */\r\nGraphics.enemy = new Array();\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CHEATSHEET = void 0;\r\n/**\r\n * Cheatsheet para o spritesheet.\r\n * Contém as coordenadas para cada sprite\r\n * possível do spritesheet\r\n */\r\nexports.CHEATSHEET = {\r\n    'wall': {\r\n        'wall_top_left': [16, 0, 16, 16],\r\n        'wall_top_mid': [16, 0, 16, 16],\r\n        'wall_top_right': [16, 0, 16, 16],\r\n        'wall_left': [16, 16, 16, 16],\r\n        'wall_mid': [32, 16, 16, 16],\r\n        'wall_right': [48, 16, 16, 16],\r\n        'wall_fountain_top': [64, 0, 16, 16],\r\n        'wall_hole_1': [48, 32, 16, 16],\r\n        'wall_hole_2': [48, 48, 16, 16],\r\n        'wall_banner_red': [16, 32, 16, 16],\r\n        'wall_banner_blue': [32, 32, 16, 16],\r\n        'wall_banner_green': [16, 48, 16, 16],\r\n        'wall_banner_yellow': [32, 48, 16, 16],\r\n        'wall_column_top': [96, 80, 16, 16],\r\n        'wall_column_mid': [96, 96, 16, 16],\r\n        'wall_column_base': [96, 112, 16, 16],\r\n        'wall_goo': [64, 80, 16, 16],\r\n        'wall_side_top_left': [0, 112, 16, 16],\r\n        'wall_side_top_right': [16, 112, 16, 16],\r\n        'wall_side_mid_left': [0, 128, 16, 16],\r\n        'wall_side_mid_right': [16, 128, 16, 16],\r\n        'wall_side_front_left': [0, 144, 16, 16],\r\n        'wall_side_front_right': [16, 144, 16, 16],\r\n        'wall_corner_top_left': [32, 112, 16, 16],\r\n        'wall_corner_top_right': [48, 112, 16, 16],\r\n        'wall_corner_left': [32, 128, 16, 16],\r\n        'wall_corner_right': [48, 128, 16, 16],\r\n        'wall_corner_bottom_left': [32, 144, 16, 16],\r\n        'wall_corner_bottom_right': [48, 144, 16, 16],\r\n        'wall_corner_front_left': [32, 160, 16, 16],\r\n        'wall_corner_front_right': [48, 160, 16, 16],\r\n        'wall_inner_corner_l_top_left': [80, 128, 16, 16],\r\n        'wall_inner_corner_l_top_right': [64, 128, 16, 16],\r\n        'wall_inner_corner_mid_left': [80, 144, 16, 16],\r\n        'wall_inner_corner_mid_right': [64, 144, 16, 16],\r\n        'wall_inner_corner_t_top_left': [80, 160, 16, 16],\r\n        'wall_inner_corner_t_top_right': [64, 160, 16, 16],\r\n        'crate': [288, 298, 16, 22],\r\n        'column_top': [80, 80, 16, 16],\r\n        'column_mid': [80, 96, 16, 16],\r\n        'column_base': [80, 112, 16, 16],\r\n    },\r\n    'wall_anim': {\r\n        'wall_fountain_mid_red': [64, 16, 16, 16],\r\n        'wall_fountain_basin_red': [64, 32, 16, 16],\r\n        'wall_fountain_mid_blue': [64, 48, 16, 16],\r\n        'wall_fountain_basin_blue': [64, 64, 16, 16],\r\n    },\r\n    'floor': {\r\n        'floor_1': [16, 64, 16, 16],\r\n        'floor_2': [32, 64, 16, 16],\r\n        'floor_3': [48, 64, 16, 16],\r\n        'floor_4': [16, 80, 16, 16],\r\n        'floor_5': [32, 80, 16, 16],\r\n        'floor_6': [48, 80, 16, 16],\r\n        'floor_7': [16, 96, 16, 16],\r\n        'floor_8': [32, 96, 16, 16],\r\n        'wall_goo_base': [64, 96, 16, 16],\r\n        'skull': [288, 320, 16, 16],\r\n    },\r\n    'interactable': {\r\n        'floor_ladder': [48, 96, 16, 16],\r\n        'hole': [96, 144, 16, 16],\r\n        'edge': [96, 128, 16, 16],\r\n    },\r\n    'interactable_anim': {\r\n        'spikes': [16, 176, 16, 16],\r\n        'switch_red': [16, 192, 16, 16],\r\n        'switch_blue': [48, 192, 16, 16],\r\n        'lever': [80, 192, 16, 16],\r\n        'chest_empty': [320, 288, 16, 16],\r\n        'chest_full': [320, 304, 16, 16],\r\n        'chest_mimic': [320, 320, 16, 16],\r\n        'coin': [288, 272, 8, 8],\r\n    },\r\n    'doors': {\r\n        'doors_all': [16, 221, 64, 35],\r\n        'doors_frame_left': [16, 224, 16, 32],\r\n        'doors_frame_top': [32, 221, 32, 3],\r\n        'doors_frame_right:': [63, 224, 16, 32],\r\n        'doors_leaf_closed': [32, 224, 32, 32],\r\n        'doors_leaf_open': [80, 224, 32, 32],\r\n    },\r\n    'weapon': {\r\n        'weapon_knife': [293, 18, 6, 13],\r\n        'weapon_rusty_sword': [307, 26, 10, 21],\r\n        'weapon_regular_sword': [323, 26, 10, 21],\r\n        'weapon_red_gem_sword': [339, 26, 10, 21],\r\n        'weapon_big_hammer': [291, 42, 10, 37],\r\n        'weapon_hammer': [307, 55, 10, 24],\r\n        'weapon_baton_with_spikes': [323, 57, 10, 22],\r\n        'weapon_mace': [339, 55, 10, 24],\r\n        'weapon_katana': [293, 82, 6, 29],\r\n        'weapon_saw_sword': [307, 86, 10, 25],\r\n        'weapon_anime_sword': [322, 81, 12, 30],\r\n        'weapon_axe': [341, 90, 9, 21],\r\n        'weapon_machete': [294, 121, 5, 22],\r\n        'weapon_cleaver': [310, 124, 8, 19],\r\n        'weapon_duel_sword': [325, 113, 9, 30],\r\n        'weapon_knight_sword': [339, 114, 10, 29],\r\n        'weapon_golden_sword': [291, 153, 10, 22],\r\n        'weapon_lavish_sword': [307, 145, 10, 30],\r\n        'weapon_red_magic_staff': [324, 145, 8, 30],\r\n        'weapon_green_magic_staff': [340, 145, 8, 30],\r\n        'weapon_spear': [293, 177, 6, 30],\r\n    },\r\n    'potion': {\r\n        'flask_big_red': [288, 224, 16, 16],\r\n        'flask_big_blue': [304, 224, 16, 16],\r\n        'flask_big_green': [320, 224, 16, 16],\r\n        'flask_big_yellow': [336, 224, 16, 16],\r\n        'flask_red': [288, 240, 16, 16],\r\n        'flask_blue': [304, 240, 16, 16],\r\n        'flask_green': [320, 240, 16, 16],\r\n        'flask_yellow': [336, 240, 16, 16],\r\n    },\r\n    'enemy': {\r\n        'tiny_zombie': [368, 16, 16, 16],\r\n        'goblin': [368, 32, 16, 16],\r\n        'imp': [368, 48, 16, 16],\r\n        'skelet': [368, 80, 16, 16],\r\n        'muddy': [368, 112, 16, 16],\r\n        'swampy': [432, 112, 16, 16],\r\n        'zombie': [368, 144, 16, 16],\r\n        'ice_zombie': [432, 144, 16, 16],\r\n        'masked_orc': [368, 172, 16, 20],\r\n        'orc_warrior': [368, 204, 16, 20],\r\n        'orc_shaman': [368, 236, 16, 20],\r\n        'necromancer': [368, 268, 16, 20],\r\n        'wogol': [368, 300, 16, 20],\r\n        'chort': [368, 328, 16, 24],\r\n        'big_zombie': [16, 270, 32, 34],\r\n        'ogre': [16, 320, 32, 32],\r\n        'big_demon': [16, 364, 32, 36],\r\n    },\r\n    'player': [128, 228, 16, 28]\r\n};\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst game_1 = __importDefault(require(\"./game/game\"));\r\n/**\r\n * Espera o DOM carregar totalmente para\r\n * poder realizar alguma tarefa\r\n */\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    var _a, _b, _c, _d;\r\n    /**\r\n     * Busca no localStorage a largura de mapa não salvo\r\n     */\r\n    const mapWidth = window.localStorage.getItem('mapWidth');\r\n    /**\r\n     * Busca no localStorage a altura de mapa não salvo\r\n     */\r\n    const mapHeight = window.localStorage.getItem('mapHeight');\r\n    /**\r\n     * Busca no localStorage os elementos de mapa não salvo\r\n     */\r\n    const elements = window.localStorage.getItem('elements');\r\n    /**\r\n     * Guarda div com menu para criar um mapa ou carregar um mapa\r\n     */\r\n    const chooseResolution = document.getElementById('chooseResolution');\r\n    /**\r\n     * Guarda div com aviso de dados não salvos encontrados\r\n     */\r\n    const unsavedData = document.getElementById('unsavedData');\r\n    /**\r\n     * Guarda div onde o canvas está localizado\r\n     */\r\n    const divCanvas = document.getElementById('divCanvas');\r\n    /**\r\n     * Guarda botão dos créditos\r\n     */\r\n    const btnCredits = document.getElementById('btnCredits');\r\n    /**\r\n     * Guarda botão de salvar mapa\r\n     */\r\n    const btnSaveMap = document.getElementById('btnSaveMap');\r\n    if (mapWidth && mapHeight && elements) {\r\n        unsavedData.style.display = 'block';\r\n    }\r\n    else {\r\n        chooseResolution.style.display = 'block';\r\n    }\r\n    /**\r\n     * Se for clicado em Yes na div\r\n     * de dados não salvos, o mapa não salvo anteriormente\r\n     * irá ser carregado\r\n     */\r\n    (_a = document.getElementById('btnUnsavedDataYes')) === null || _a === void 0 ? void 0 : _a.addEventListener('click', () => {\r\n        btnCredits.style.display = 'block';\r\n        btnSaveMap.style.display = 'block';\r\n        unsavedData.style.display = 'none';\r\n        divCanvas.style.display = 'flex';\r\n        new game_1.default(parseInt(mapWidth), parseInt(mapHeight), elements).main();\r\n    });\r\n    /**\r\n     * Se for clicado No na div\r\n     * de dados não salvos, o menu para criar/carregar um mapa é\r\n     * mostrado\r\n     */\r\n    (_b = document.getElementById('btnUnsavedDataNo')) === null || _b === void 0 ? void 0 : _b.addEventListener('click', () => {\r\n        unsavedData.style.display = 'none';\r\n        chooseResolution.style.display = 'block';\r\n    });\r\n    /**\r\n     * Se for clicado Create map na div\r\n     * de criação/carregamento de mapa, é criado um mapa\r\n     * a partir dos inputs de width e height\r\n     */\r\n    (_c = document.getElementById('btnCreateMap')) === null || _c === void 0 ? void 0 : _c.addEventListener('click', () => {\r\n        const inputWidth = document.getElementById('width');\r\n        const inputHeight = document.getElementById('height');\r\n        const width = parseInt(inputWidth.value);\r\n        const height = parseInt(inputHeight.value);\r\n        if (width && height) {\r\n            btnCredits.style.display = 'block';\r\n            btnSaveMap.style.display = 'block';\r\n            chooseResolution.style.display = 'none';\r\n            divCanvas.style.display = 'flex';\r\n            new game_1.default(width, height).main();\r\n        }\r\n    });\r\n    /**\r\n     * Se for clicado Load map na div\r\n     * de criação/carregamento de mapa, é criado um mapa\r\n     * a partir do arquivo JSON feito upload\r\n     */\r\n    (_d = document.getElementById('btnLoadMap')) === null || _d === void 0 ? void 0 : _d.addEventListener('click', () => {\r\n        const inputJSON = document.getElementById('inputJSON');\r\n        inputJSON.addEventListener('change', function () {\r\n            if (this.files) {\r\n                if (this.files[0].type === \"application/json\") {\r\n                    const fr = new FileReader();\r\n                    fr.addEventListener('load', (e) => {\r\n                        if (e.target) {\r\n                            const mapJSONString = e.target.result;\r\n                            const mapJSON = JSON.parse(mapJSONString);\r\n                            const width = parseInt(mapJSON.width);\r\n                            const height = parseInt(mapJSON.height);\r\n                            const elements = JSON.stringify(mapJSON.elements);\r\n                            btnCredits.style.display = 'block';\r\n                            btnSaveMap.style.display = 'block';\r\n                            chooseResolution.style.display = 'none';\r\n                            divCanvas.style.display = 'flex';\r\n                            new game_1.default(width, height, elements).main();\r\n                        }\r\n                    });\r\n                    fr.readAsText(this.files[0]);\r\n                }\r\n            }\r\n        });\r\n        inputJSON.click();\r\n    });\r\n});\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.GameState = exports.TILE_SIZE = exports.SPRITESHEET = exports.GAME_HEIGHT = exports.GAME_WIDTH = void 0;\r\n/**\r\n * Largura do jogo.\r\n * É por essa largura que se basea o cálculo\r\n * de escala\r\n */\r\nexports.GAME_WIDTH = 320;\r\n/**\r\n * Altura do jogo\r\n */\r\nexports.GAME_HEIGHT = 180;\r\n/**\r\n * Caminho para o spritesheet\r\n */\r\nexports.SPRITESHEET = './assets/img/spritesheet.png';\r\n/**\r\n * Tamanho dos tiles que compõem o\r\n * mapa\r\n */\r\nexports.TILE_SIZE = 16;\r\n/**\r\n * Enum com os possíveis estados\r\n * do jogo\r\n */\r\nvar GameState;\r\n(function (GameState) {\r\n    GameState[GameState[\"INITIALIZING\"] = 0] = \"INITIALIZING\";\r\n    GameState[GameState[\"MAINMENU\"] = 1] = \"MAINMENU\";\r\n    GameState[GameState[\"PLAY\"] = 2] = \"PLAY\";\r\n    GameState[GameState[\"CUTSCENE\"] = 3] = \"CUTSCENE\";\r\n    GameState[GameState[\"PAUSEMENU\"] = 4] = \"PAUSEMENU\";\r\n    GameState[GameState[\"ENDING\"] = 5] = \"ENDING\";\r\n})(GameState = exports.GameState || (exports.GameState = {}));\r\n;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst graphics_1 = __importDefault(require(\"../graphics/graphics\"));\r\nconst game_1 = __importDefault(require(\"../game/game\"));\r\n/**\r\n * Classe para lidar com alguns elementos HTML\r\n */\r\nclass HTML {\r\n    /**\r\n     * Construtor da classe HTML\r\n     *\r\n     * @param scale\r\n     */\r\n    constructor(scale) {\r\n        this.spanFPS = document.getElementById('fpsCounter');\r\n        this.btnCredits = document.getElementById('btnCredits');\r\n        this.modalCredits = document.getElementById('modalCredits');\r\n        this.btnToggleFPS = document.getElementById('toggleFPS');\r\n        this.elements = document.getElementById('elements');\r\n        this.scale = scale;\r\n        this.spanFPS.style.display = 'none';\r\n        this.modalCredits.style.display = 'none';\r\n        this.initializeEvents();\r\n    }\r\n    /**\r\n     * Inicializa eventos de\r\n     * alguns elementos HTML\r\n     */\r\n    initializeEvents() {\r\n        /**\r\n         * Adiciona função ao clicar no botão dos créditos,\r\n         * para mostrar/esconder modal de créditos\r\n         */\r\n        this.btnCredits.addEventListener('click', () => {\r\n            if (this.modalCredits.style.display === 'none') {\r\n                this.modalCredits.style.display = 'block';\r\n            }\r\n            else {\r\n                this.modalCredits.style.display = 'none';\r\n            }\r\n        });\r\n        /**\r\n         * Adiciona função ao clicar no botão ToggleFPS,\r\n         * para mostrar/esconder FPS\r\n         */\r\n        this.btnToggleFPS.addEventListener('click', () => {\r\n            if (this.spanFPS.style.display === 'block') {\r\n                this.spanFPS.style.display = 'none';\r\n            }\r\n            else {\r\n                this.spanFPS.style.display = 'block';\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Cria elementos arrastáveis\r\n     * a partir dos sprites disponíveis\r\n     */\r\n    createElements() {\r\n        const divBreakWallBefore = document.createElement('div');\r\n        divBreakWallBefore.className = 'break';\r\n        const spanWall = document.createElement('span');\r\n        spanWall.innerHTML = 'Wall:';\r\n        const divBreakWallAfter = document.createElement('div');\r\n        divBreakWallAfter.className = 'break';\r\n        this.elements.append(divBreakWallBefore);\r\n        this.elements.append(spanWall);\r\n        this.elements.append(divBreakWallAfter);\r\n        graphics_1.default.wall.forEach((sprite, index) => {\r\n            this.appendElements(sprite, index, 'wall');\r\n        });\r\n        const divBreakWallAnimBefore = document.createElement('div');\r\n        divBreakWallAnimBefore.className = 'break';\r\n        const spanWallAnim = document.createElement('span');\r\n        spanWallAnim.innerHTML = 'WallAnim:';\r\n        const divBreakWallAnimAfter = document.createElement('div');\r\n        divBreakWallAnimAfter.className = 'break';\r\n        this.elements.append(divBreakWallAnimBefore);\r\n        this.elements.append(spanWallAnim);\r\n        this.elements.append(divBreakWallAnimAfter);\r\n        graphics_1.default.wallAnim.forEach((sprite, index) => {\r\n            this.appendElements(sprite, index, 'wallAnim');\r\n        });\r\n        const divBreakFloorBefore = document.createElement('div');\r\n        divBreakFloorBefore.className = 'break';\r\n        const spanFloor = document.createElement('span');\r\n        spanFloor.innerHTML = 'Floor:';\r\n        const divBreakFloorAfter = document.createElement('div');\r\n        divBreakFloorAfter.className = 'break';\r\n        this.elements.append(divBreakFloorBefore);\r\n        this.elements.append(spanFloor);\r\n        this.elements.append(divBreakFloorAfter);\r\n        graphics_1.default.floor.forEach((sprite, index) => {\r\n            this.appendElements(sprite, index, 'floor');\r\n        });\r\n        const divBreakInteractableBefore = document.createElement('div');\r\n        divBreakInteractableBefore.className = 'break';\r\n        const spanInteractable = document.createElement('span');\r\n        spanInteractable.innerHTML = 'Interactable:';\r\n        const divBreakInteractableAfter = document.createElement('div');\r\n        divBreakInteractableAfter.className = 'break';\r\n        this.elements.append(divBreakInteractableBefore);\r\n        this.elements.append(spanInteractable);\r\n        this.elements.append(divBreakInteractableAfter);\r\n        graphics_1.default.interactable.forEach((sprite, index) => {\r\n            this.appendElements(sprite, index, 'interactable');\r\n        });\r\n        const divBreakInteractableAnimBefore = document.createElement('div');\r\n        divBreakInteractableAnimBefore.className = 'break';\r\n        const spanInteractableAnim = document.createElement('span');\r\n        spanInteractableAnim.innerHTML = 'InteractableAnim:';\r\n        const divBreakInteractableAnimAfter = document.createElement('div');\r\n        divBreakInteractableAnimAfter.className = 'break';\r\n        this.elements.append(divBreakInteractableAnimBefore);\r\n        this.elements.append(spanInteractableAnim);\r\n        this.elements.append(divBreakInteractableAnimAfter);\r\n        graphics_1.default.interactableAnim.forEach((sprite, index) => {\r\n            this.appendElements(sprite, index, 'interactableAnim');\r\n        });\r\n        const divBreakDoorsBefore = document.createElement('div');\r\n        divBreakDoorsBefore.className = 'break';\r\n        const spanDoors = document.createElement('span');\r\n        spanDoors.innerHTML = 'Doors:';\r\n        const divBreakDoorsAfter = document.createElement('div');\r\n        divBreakDoorsAfter.className = 'break';\r\n        this.elements.append(divBreakDoorsBefore);\r\n        this.elements.append(spanDoors);\r\n        this.elements.append(divBreakDoorsAfter);\r\n        graphics_1.default.doors.forEach((sprite, index) => {\r\n            this.appendElements(sprite, index, 'doors');\r\n        });\r\n        const divBreakWeaponBefore = document.createElement('div');\r\n        divBreakWeaponBefore.className = 'break';\r\n        const spanWeapon = document.createElement('span');\r\n        spanWeapon.innerHTML = 'Weapon:';\r\n        const divBreakWeaponAfter = document.createElement('div');\r\n        divBreakWeaponAfter.className = 'break';\r\n        this.elements.append(divBreakWeaponBefore);\r\n        this.elements.append(spanWeapon);\r\n        this.elements.append(divBreakWeaponAfter);\r\n        graphics_1.default.weapon.forEach((sprite, index) => {\r\n            this.appendElements(sprite, index, 'weapon');\r\n        });\r\n        const divBreakPotionBefore = document.createElement('div');\r\n        divBreakPotionBefore.className = 'break';\r\n        const spanPotion = document.createElement('span');\r\n        spanPotion.innerHTML = 'Potion:';\r\n        const divBreakPotionAfter = document.createElement('div');\r\n        divBreakPotionAfter.className = 'break';\r\n        this.elements.append(divBreakPotionBefore);\r\n        this.elements.append(spanPotion);\r\n        this.elements.append(divBreakPotionAfter);\r\n        graphics_1.default.potion.forEach((sprite, index) => {\r\n            this.appendElements(sprite, index, 'potion');\r\n        });\r\n        const divBreakEnemyBefore = document.createElement('div');\r\n        divBreakEnemyBefore.className = 'break';\r\n        const spanEnemy = document.createElement('span');\r\n        spanEnemy.innerHTML = 'Enemy:';\r\n        const divBreakEnemyAfter = document.createElement('div');\r\n        divBreakEnemyAfter.className = 'break';\r\n        this.elements.append(divBreakEnemyBefore);\r\n        this.elements.append(spanEnemy);\r\n        this.elements.append(divBreakEnemyAfter);\r\n        graphics_1.default.enemy.forEach((sprite, index) => {\r\n            this.appendElements(sprite, index, 'enemy');\r\n        });\r\n        const divBreakPlayerBefore = document.createElement('div');\r\n        divBreakPlayerBefore.className = 'break';\r\n        const spanPlayer = document.createElement('span');\r\n        spanPlayer.innerHTML = 'Player:';\r\n        const divBreakPlayerAfter = document.createElement('div');\r\n        divBreakPlayerAfter.className = 'break';\r\n        this.elements.append(divBreakPlayerBefore);\r\n        this.elements.append(spanPlayer);\r\n        this.elements.append(divBreakPlayerAfter);\r\n        this.appendElements(graphics_1.default.player, 0, 'player');\r\n    }\r\n    /**\r\n     * Adiciona elementos arrastáveis\r\n     * a uma div visível\r\n     *\r\n     * @param sprite\r\n     * @param index\r\n     * @param array\r\n     */\r\n    appendElements(sprite, index, array) {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.draggable = true;\r\n        canvas.width = sprite.sprite.width * this.scale;\r\n        canvas.height = sprite.sprite.height * this.scale;\r\n        canvas.style.margin = '5px';\r\n        canvas.title = sprite.name;\r\n        canvas.id = sprite.name;\r\n        canvas.dataset.index = '' + index;\r\n        canvas.dataset.array = array;\r\n        canvas.addEventListener('dragstart', (e) => {\r\n            game_1.default.dragged = canvas;\r\n            game_1.default.dragEvent = e;\r\n        });\r\n        const ctx = canvas.getContext('2d');\r\n        ctx.scale(this.scale, this.scale);\r\n        ctx.imageSmoothingEnabled = false;\r\n        ctx.drawImage(sprite.sprite, 0, 0);\r\n        this.elements.append(canvas);\r\n    }\r\n}\r\nexports.default = HTML;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./assets/ts/main.ts\");\n"],"sourceRoot":""}